@page "/acceder"
@using ClienteBlogBlazorWASM.Modelos
@using ClienteBlazorWASM.Pages
@using ClienteBlogBlazorWASM.Services.IServices
@inject IServicioAutenticacion servicioAutenticacion
@inject NavigationManager navigationManager

<div class="py-4">
    <div class="row form-group">
        <div class="col-6 offset-3">
            <div class="card border">
                <div class="card-body px-lg-5 pt-4">
                    <h3 class="col-12 text-success text-center py-2">
                        <strong>Acceder</strong>
                    </h3>

                    <EditForm Model="usuarioAutenticacion" OnValidSubmit="AccesoUsuario">
                        <DataAnnotationsValidator />

                        @if (MostrarErroresAutenticacion)
                        {
                            <p class="text-center text-danger">@Errores</p>
                        }

                        <div class="form-row py-2">
                            <InputText @bind-Value="usuarioAutenticacion.NombreDeUsuario" id="email" placeholder="Nombre usuario..." class="form-control mb-2" />
                            <ValidationMessage For="()=>usuarioAutenticacion.NombreDeUsuario" />
                        </div>

                        <div class="form-row py-2">
                            <InputText @bind-Value="usuarioAutenticacion.Password" type="password" placeholder="Password..." id="password" class="form-control mb-2" />
                            <ValidationMessage For="()=>usuarioAutenticacion.Password" />
                        </div>

                        <div class="row">
                            <div class="col-6">
                                @if (EstaProcesando)
                                {
                                    <button type="submit" class="btn btn-success disabled" style="vertical-align:middle;line-height:30px;"><i class="fas fa-sign-in-alt"></i> Porfavor espera...</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-success" style="vertical-align:middle;line-height:30px;"><i class="fas fa-sign-in-alt"></i> Acceder</button>
                                }
                            </div>
                            <div class="col-6">
                                <a href="/registrarse" class="btn btn-primary text-white" style="vertical-align:middle;line-height:30px;"><i class="fas fa-user-plus"></i> Registrar nuevo usuario</a>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UsuarioAutenticacion usuarioAutenticacion = new UsuarioAutenticacion();
    public bool EstaProcesando { get; set; } = false;
    public bool MostrarErroresAutenticacion { get; set; }
    public string UrlRetorno { get; set; }
    public string Errores { get; set; }

    private async Task AccesoUsuario()
    {
        MostrarErroresAutenticacion = false;
        EstaProcesando = true;
        var result = await servicioAutenticacion.Acceder(usuarioAutenticacion);
        if (result.IsSuccess)
        {
            var urlAbsoluta = new Uri(navigationManager.Uri);
            var parametrosQuery = HttpUtility.ParseQueryString(urlAbsoluta.Query);
            UrlRetorno = parametrosQuery["returnUrl"];
            if (string.IsNullOrEmpty(UrlRetorno))
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                navigationManager.NavigateTo("/" + UrlRetorno);
            }
        }
        else
        {
            EstaProcesando = false;
            MostrarErroresAutenticacion = true;
            Errores = "Usuario y/o contraseña son incorrectos";
            navigationManager.NavigateTo("/acceder");
        }
    }
}
